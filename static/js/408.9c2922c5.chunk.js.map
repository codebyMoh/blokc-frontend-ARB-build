{"version":3,"file":"static/js/408.9c2922c5.chunk.js","mappings":"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","sources":["../node_modules/@toruslabs/tss-lib/browser.js"],"sourcesContent":["let wasm;\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) {\n  return heap[idx];\n}\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n  if (idx < 36) return;\n  heap[idx] = heap_next;\n  heap_next = idx;\n}\n\nfunction takeObject(idx) {\n  const ret = getObject(idx);\n  dropObject(idx);\n  return ret;\n}\n\nconst cachedTextDecoder = new TextDecoder(\"utf-8\", { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachedUint8Memory0 = new Uint8Array();\n\nfunction getUint8Memory0() {\n  if (cachedUint8Memory0.byteLength === 0) {\n    cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n  }\n  return cachedUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n  return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction addHeapObject(obj) {\n  if (heap_next === heap.length) heap.push(heap.length + 1);\n  const idx = heap_next;\n  heap_next = heap[idx];\n\n  heap[idx] = obj;\n  return idx;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst cachedTextEncoder = new TextEncoder(\"utf-8\");\n\nconst encodeString =\n  typeof cachedTextEncoder.encodeInto === \"function\"\n    ? function (arg, view) {\n        return cachedTextEncoder.encodeInto(arg, view);\n      }\n    : function (arg, view) {\n        const buf = cachedTextEncoder.encode(arg);\n        view.set(buf);\n        return {\n          read: arg.length,\n          written: buf.length,\n        };\n      };\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n  if (realloc === undefined) {\n    const buf = cachedTextEncoder.encode(arg);\n    const ptr = malloc(buf.length);\n    getUint8Memory0()\n      .subarray(ptr, ptr + buf.length)\n      .set(buf);\n    WASM_VECTOR_LEN = buf.length;\n    return ptr;\n  }\n\n  let len = arg.length;\n  let ptr = malloc(len);\n\n  const mem = getUint8Memory0();\n\n  let offset = 0;\n\n  for (; offset < len; offset++) {\n    const code = arg.charCodeAt(offset);\n    if (code > 0x7f) break;\n    mem[ptr + offset] = code;\n  }\n\n  if (offset !== len) {\n    if (offset !== 0) {\n      arg = arg.slice(offset);\n    }\n    ptr = realloc(ptr, len, (len = offset + arg.length * 3));\n    const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n    const ret = encodeString(arg, view);\n\n    offset += ret.written;\n  }\n\n  WASM_VECTOR_LEN = offset;\n  return ptr;\n}\n\nfunction isLikeNone(x) {\n  return x === undefined || x === null;\n}\n\nlet cachedInt32Memory0 = new Int32Array();\n\nfunction getInt32Memory0() {\n  if (cachedInt32Memory0.byteLength === 0) {\n    cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n  }\n  return cachedInt32Memory0;\n}\n\nfunction makeMutClosure(arg0, arg1, dtor, f) {\n  const state = { a: arg0, b: arg1, cnt: 1, dtor };\n  const real = (...args) => {\n    // First up with a closure we increment the internal reference\n    // count. This ensures that the Rust closure environment won't\n    // be deallocated while we're invoking it.\n    state.cnt++;\n    const { a } = state;\n    state.a = 0;\n    try {\n      return f(a, state.b, ...args);\n    } finally {\n      if (--state.cnt === 0) {\n        wasm.__wbindgen_export_2.get(state.dtor)(a, state.b);\n      } else {\n        state.a = a;\n      }\n    }\n  };\n  real.original = state;\n\n  return real;\n}\nfunction __wbg_adapter_24(arg0, arg1, arg2) {\n  wasm._dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h393860affdd597ff(\n    arg0,\n    arg1,\n    addHeapObject(arg2)\n  );\n}\n\nfunction handleError(f, args) {\n  try {\n    return f.apply(this, args);\n  } catch (e) {\n    wasm.__wbindgen_exn_store(addHeapObject(e));\n  }\n}\n/**\n * @returns {number}\n */\nexport function batch_size() {\n  const ret = wasm.batch_size();\n  return ret >>> 0;\n}\n\n/**\n * @param {string} state\n * @returns {number}\n */\nexport function random_generator(state) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(state, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    wasm.random_generator(retptr, ptr0, len0);\n    const r0 = getInt32Memory0()[retptr / 4 + 0];\n    const r1 = getInt32Memory0()[retptr / 4 + 1];\n    const r2 = getInt32Memory0()[retptr / 4 + 2];\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return r0;\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\n\n/**\n * @param {number} rng\n */\nexport function random_generator_free(rng) {\n  wasm.random_generator_free(rng);\n}\n\n/**\n * @param {string} session\n * @param {number} player_index\n * @param {number} player_count\n * @param {number} threshold\n * @param {string} share\n * @param {string} pubkey\n * @returns {number}\n */\nexport function threshold_signer(session, player_index, player_count, threshold, share, pubkey) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(session, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(share, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ptr2 = passStringToWasm0(pubkey, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len2 = WASM_VECTOR_LEN;\n    wasm.threshold_signer(retptr, ptr0, len0, player_index, player_count, threshold, ptr1, len1, ptr2, len2);\n    const r0 = getInt32Memory0()[retptr / 4 + 0];\n    const r1 = getInt32Memory0()[retptr / 4 + 1];\n    const r2 = getInt32Memory0()[retptr / 4 + 2];\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return r0;\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\n\n/**\n * @param {number} signer\n */\nexport function threshold_signer_free(signer) {\n  wasm.threshold_signer_free(signer);\n}\n\n/**\n * @param {number} signer\n * @param {number} rng\n * @returns {Promise<any>}\n */\nexport function setup(signer, rng) {\n  const ret = wasm.setup(signer, rng);\n  return takeObject(ret);\n}\n\n/**\n * @param {Uint8Array} parties\n * @param {number} signer\n * @param {number} rng\n * @returns {Promise<any>}\n */\nexport function precompute(parties, signer, rng) {\n  const ret = wasm.precompute(addHeapObject(parties), signer, rng);\n  return takeObject(ret);\n}\n\n/**\n * @param {string} msg\n * @param {boolean} hash_only\n * @param {any} precompute\n * @returns {any}\n */\nexport function local_sign(msg, hash_only, precompute) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(msg, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    wasm.local_sign(retptr, ptr0, len0, hash_only, addHeapObject(precompute));\n    const r0 = getInt32Memory0()[retptr / 4 + 0];\n    const r1 = getInt32Memory0()[retptr / 4 + 1];\n    const r2 = getInt32Memory0()[retptr / 4 + 2];\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return takeObject(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\n\n/**\n * @param {any} precompute\n * @returns {any}\n */\nexport function get_r_from_precompute(precompute) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    wasm.get_r_from_precompute(retptr, addHeapObject(precompute));\n    const r0 = getInt32Memory0()[retptr / 4 + 0];\n    const r1 = getInt32Memory0()[retptr / 4 + 1];\n    const r2 = getInt32Memory0()[retptr / 4 + 2];\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return takeObject(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\n\nlet cachedUint32Memory0 = new Uint32Array();\n\nfunction getUint32Memory0() {\n  if (cachedUint32Memory0.byteLength === 0) {\n    cachedUint32Memory0 = new Uint32Array(wasm.memory.buffer);\n  }\n  return cachedUint32Memory0;\n}\n\nfunction passArrayJsValueToWasm0(array, malloc) {\n  const ptr = malloc(array.length * 4);\n  const mem = getUint32Memory0();\n  for (let i = 0; i < array.length; i++) {\n    mem[ptr / 4 + i] = addHeapObject(array[i]);\n  }\n  WASM_VECTOR_LEN = array.length;\n  return ptr;\n}\n/**\n * @param {string} msg\n * @param {boolean} hash_only\n * @param {any} r\n * @param {any[]} sig_frags\n * @param {string} pubkey\n * @returns {any}\n */\nexport function local_verify(msg, hash_only, r, sig_frags, pubkey) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(msg, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passArrayJsValueToWasm0(sig_frags, wasm.__wbindgen_malloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ptr2 = passStringToWasm0(pubkey, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len2 = WASM_VECTOR_LEN;\n    wasm.local_verify(retptr, ptr0, len0, hash_only, addHeapObject(r), ptr1, len1, ptr2, len2);\n    const r0 = getInt32Memory0()[retptr / 4 + 0];\n    const r1 = getInt32Memory0()[retptr / 4 + 1];\n    const r2 = getInt32Memory0()[retptr / 4 + 2];\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return takeObject(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\n\n/**\n * @param {Uint8Array} counterparties\n * @param {string} msg\n * @param {boolean} hash_only\n * @param {number} signer\n * @param {number} rng\n * @returns {Promise<any>}\n */\nexport function sign(counterparties, msg, hash_only, signer, rng) {\n  const ptr0 = passStringToWasm0(msg, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n  const len0 = WASM_VECTOR_LEN;\n  const ret = wasm.sign(addHeapObject(counterparties), ptr0, len0, hash_only, signer, rng);\n  return takeObject(ret);\n}\n\nfunction __wbg_adapter_40(arg0, arg1, arg2, arg3, arg4) {\n  wasm.wasm_bindgen__convert__closures__invoke3_mut__h1fa7dc56d2cd12f8(arg0, arg1, addHeapObject(arg2), arg3, addHeapObject(arg4));\n}\n\nfunction __wbg_adapter_53(arg0, arg1, arg2, arg3) {\n  wasm.wasm_bindgen__convert__closures__invoke2_mut__h09aaa711cefcd1d9(arg0, arg1, addHeapObject(arg2), addHeapObject(arg3));\n}\n\nlet stack_pointer = 32;\n\nfunction addBorrowedObject(obj) {\n  if (stack_pointer == 1) throw new Error(\"out of js stack\");\n  heap[--stack_pointer] = obj;\n  return stack_pointer;\n}\n/**\n * Handler for `console.log` invocations.\n *\n * If a test is currently running it takes the `args` array and stringifies\n * it and appends it to the current output of the test. Otherwise it passes\n * the arguments to the original `console.log` function, psased as\n * `original`.\n * @param {Array<any>} args\n */\nexport function __wbgtest_console_log(args) {\n  try {\n    wasm.__wbgtest_console_log(addBorrowedObject(args));\n  } finally {\n    heap[stack_pointer++] = undefined;\n  }\n}\n\n/**\n * Handler for `console.debug` invocations. See above.\n * @param {Array<any>} args\n */\nexport function __wbgtest_console_debug(args) {\n  try {\n    wasm.__wbgtest_console_debug(addBorrowedObject(args));\n  } finally {\n    heap[stack_pointer++] = undefined;\n  }\n}\n\n/**\n * Handler for `console.info` invocations. See above.\n * @param {Array<any>} args\n */\nexport function __wbgtest_console_info(args) {\n  try {\n    wasm.__wbgtest_console_info(addBorrowedObject(args));\n  } finally {\n    heap[stack_pointer++] = undefined;\n  }\n}\n\n/**\n * Handler for `console.warn` invocations. See above.\n * @param {Array<any>} args\n */\nexport function __wbgtest_console_warn(args) {\n  try {\n    wasm.__wbgtest_console_warn(addBorrowedObject(args));\n  } finally {\n    heap[stack_pointer++] = undefined;\n  }\n}\n\n/**\n * Handler for `console.error` invocations. See above.\n * @param {Array<any>} args\n */\nexport function __wbgtest_console_error(args) {\n  try {\n    wasm.__wbgtest_console_error(addBorrowedObject(args));\n  } finally {\n    heap[stack_pointer++] = undefined;\n  }\n}\n\n/**\n * Runtime test harness support instantiated in JS.\n *\n * The node.js entry script instantiates a `Context` here which is used to\n * drive test execution.\n */\nexport class WasmBindgenTestContext {\n  static __wrap(ptr) {\n    const obj = Object.create(WasmBindgenTestContext.prototype);\n    obj.ptr = ptr;\n\n    return obj;\n  }\n\n  __destroy_into_raw() {\n    const { ptr } = this;\n    this.ptr = 0;\n\n    return ptr;\n  }\n\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_wasmbindgentestcontext_free(ptr);\n  }\n\n  /**\n   * Creates a new context ready to run tests.\n   *\n   * A `Context` is the main structure through which test execution is\n   * coordinated, and this will collect output and results for all executed\n   * tests.\n   */\n  constructor() {\n    const ret = wasm.wasmbindgentestcontext_new();\n    return WasmBindgenTestContext.__wrap(ret);\n  }\n\n  /**\n   * Inform this context about runtime arguments passed to the test\n   * harness.\n   *\n   * Eventually this will be used to support flags, but for now it's just\n   * used to support test filters.\n   * @param {any[]} args\n   */\n  args(args) {\n    const ptr0 = passArrayJsValueToWasm0(args, wasm.__wbindgen_malloc);\n    const len0 = WASM_VECTOR_LEN;\n    wasm.wasmbindgentestcontext_args(this.ptr, ptr0, len0);\n  }\n\n  /**\n   * Executes a list of tests, returning a promise representing their\n   * eventual completion.\n   *\n   * This is the main entry point for executing tests. All the tests passed\n   * in are the JS `Function` object that was plucked off the\n   * `WebAssembly.Instance` exports list.\n   *\n   * The promise returned resolves to either `true` if all tests passed or\n   * `false` if at least one test failed.\n   * @param {any[]} tests\n   * @returns {Promise<any>}\n   */\n  run(tests) {\n    const ptr0 = passArrayJsValueToWasm0(tests, wasm.__wbindgen_malloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ret = wasm.wasmbindgentestcontext_run(this.ptr, ptr0, len0);\n    return takeObject(ret);\n  }\n}\n\nasync function load(module, imports) {\n  if (typeof Response === \"function\" && module instanceof Response) {\n    if (typeof WebAssembly.instantiateStreaming === \"function\") {\n      try {\n        return await WebAssembly.instantiateStreaming(module, imports);\n      } catch (e) {\n        if (module.headers.get(\"Content-Type\") != \"application/wasm\") {\n          console.warn(\n            \"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\",\n            e\n          );\n        } else {\n          throw e;\n        }\n      }\n    }\n\n    const bytes = await module.arrayBuffer();\n    return WebAssembly.instantiate(bytes, imports);\n  }\n  const instance = await WebAssembly.instantiate(module, imports);\n\n  if (instance instanceof WebAssembly.Instance) {\n    return { instance, module };\n  }\n  return instance;\n}\n\nfunction getImports() {\n  const imports = {};\n  imports.wbg = {};\n  imports.wbg.__wbindgen_object_drop_ref = function (arg0) {\n    takeObject(arg0);\n  };\n  imports.wbg.__wbindgen_cb_drop = function (arg0) {\n    const obj = takeObject(arg0).original;\n    if (obj.cnt-- == 1) {\n      obj.a = 0;\n      return true;\n    }\n    const ret = false;\n    return ret;\n  };\n  imports.wbg.__wbindgen_string_new = function (arg0, arg1) {\n    const ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_jssendmsg_9558e1e6ccbf0bf6 = function () {\n    return handleError(function (arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n      try {\n        const ret = js_send_msg(\n          getStringFromWasm0(arg0, arg1),\n          arg2 >>> 0,\n          arg3 >>> 0,\n          getStringFromWasm0(arg4, arg5),\n          getStringFromWasm0(arg6, arg7)\n        );\n        return addHeapObject(ret);\n      } finally {\n        wasm.__wbindgen_free(arg0, arg1);\n        wasm.__wbindgen_free(arg4, arg5);\n        wasm.__wbindgen_free(arg6, arg7);\n      }\n    }, arguments);\n  };\n  imports.wbg.__wbindgen_string_get = function (arg0, arg1) {\n    const obj = getObject(arg1);\n    const ret = typeof obj === \"string\" ? obj : undefined;\n    const ptr0 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n  };\n  imports.wbg.__wbg_jsreadmsg_3e2fec56a08697d4 = function () {\n    return handleError(function (arg0, arg1, arg2, arg3, arg4, arg5) {\n      try {\n        const ret = js_read_msg(getStringFromWasm0(arg0, arg1), arg2 >>> 0, arg3 >>> 0, getStringFromWasm0(arg4, arg5));\n        return addHeapObject(ret);\n      } finally {\n        wasm.__wbindgen_free(arg0, arg1);\n        wasm.__wbindgen_free(arg4, arg5);\n      }\n    }, arguments);\n  };\n  imports.wbg.__wbindgen_bigint_from_u64 = function (arg0) {\n    const ret = BigInt.asUintN(64, arg0);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_number_new = function (arg0) {\n    const ret = arg0;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_newnoargs_b5b063fc6c2f0376 = function (arg0, arg1) {\n    const ret = new Function(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_call_97ae9d8645dc388b = function () {\n    return handleError(function (arg0, arg1) {\n      const ret = getObject(arg0).call(getObject(arg1));\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbindgen_object_clone_ref = function (arg0) {\n    const ret = getObject(arg0);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_self_6d479506f72c6a71 = function () {\n    return handleError(function () {\n      const ret = self.self;\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_window_f2557cc78490aceb = function () {\n    return handleError(function () {\n      const ret = window.window;\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_globalThis_7f206bda628d5286 = function () {\n    return handleError(function () {\n      const ret = globalThis.globalThis;\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_global_ba75c50d1cf384f4 = function () {\n    return handleError(function () {\n      const ret = global.global;\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbindgen_is_undefined = function (arg0) {\n    const ret = getObject(arg0) === undefined;\n    return ret;\n  };\n  imports.wbg.__wbg_forEach_ce1177df15902e0c = function (arg0, arg1, arg2) {\n    try {\n      var state0 = { a: arg1, b: arg2 };\n      const cb0 = (arg0, arg1, arg2) => {\n        const { a } = state0;\n        state0.a = 0;\n        try {\n          return __wbg_adapter_40(a, state0.b, arg0, arg1, arg2);\n        } finally {\n          state0.a = a;\n        }\n      };\n      getObject(arg0).forEach(cb0);\n    } finally {\n      state0.a = state0.b = 0;\n    }\n  };\n  imports.wbg.__wbg_message_fe2af63ccc8985bc = function (arg0) {\n    const ret = getObject(arg0).message;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_name_48eda3ae6aa697ca = function (arg0) {\n    const ret = getObject(arg0).name;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_call_168da88779e35f61 = function () {\n    return handleError(function (arg0, arg1, arg2) {\n      const ret = getObject(arg0).call(getObject(arg1), getObject(arg2));\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_new_9962f939219f1820 = function (arg0, arg1) {\n    try {\n      var state0 = { a: arg0, b: arg1 };\n      const cb0 = (arg0, arg1) => {\n        const { a } = state0;\n        state0.a = 0;\n        try {\n          return __wbg_adapter_53(a, state0.b, arg0, arg1);\n        } finally {\n          state0.a = a;\n        }\n      };\n      const ret = new Promise(cb0);\n      return addHeapObject(ret);\n    } finally {\n      state0.a = state0.b = 0;\n    }\n  };\n  imports.wbg.__wbg_resolve_99fe17964f31ffc0 = function (arg0) {\n    const ret = Promise.resolve(getObject(arg0));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_then_11f7a54d67b4bfad = function (arg0, arg1) {\n    const ret = getObject(arg0).then(getObject(arg1));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_then_cedad20fbbd9418a = function (arg0, arg1, arg2) {\n    const ret = getObject(arg0).then(getObject(arg1), getObject(arg2));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_buffer_3f3d764d4747d564 = function (arg0) {\n    const ret = getObject(arg0).buffer;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_new_8c3f0052272a457a = function (arg0) {\n    const ret = new Uint8Array(getObject(arg0));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_set_83db9690f9353e79 = function (arg0, arg1, arg2) {\n    getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n  };\n  imports.wbg.__wbg_length_9e1ae1900cb0fbd5 = function (arg0) {\n    const ret = getObject(arg0).length;\n    return ret;\n  };\n  imports.wbg.__wbindgen_throw = function (arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n  };\n  imports.wbg.__wbindgen_memory = function () {\n    const ret = wasm.memory;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_new_abda76e883ba8a5f = function () {\n    const ret = new Error();\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_stack_658279fe44541cf6 = function (arg0, arg1) {\n    const ret = getObject(arg1).stack;\n    const ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n  };\n  imports.wbg.__wbg_error_f851667af71bcfc6 = function (arg0, arg1) {\n    try {\n      console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n      wasm.__wbindgen_free(arg0, arg1);\n    }\n  };\n  imports.wbg.__wbg_log_d59c74802fa44fe2 = function (arg0, arg1) {\n    console.log(getStringFromWasm0(arg0, arg1));\n  };\n  imports.wbg.__wbg_static_accessor_document_0187e21f53c04a48 = function () {\n    const ret = document;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_String_0713d2a3d2b5f6b1 = function (arg0, arg1) {\n    const ret = String(getObject(arg1));\n    const ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n  };\n  imports.wbg.__wbg_self_74338d9cb12c5d75 = function (arg0) {\n    const ret = getObject(arg0).self;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_jsval_eq = function (arg0, arg1) {\n    const ret = getObject(arg0) === getObject(arg1);\n    return ret;\n  };\n  imports.wbg.__wbg_getElementById_4c39186cc7ced742 = function (arg0, arg1, arg2) {\n    const ret = getObject(arg0).getElementById(getStringFromWasm0(arg1, arg2));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_settextcontent_344de5dc2a8e15ca = function (arg0, arg1, arg2) {\n    getObject(arg0).textContent = getStringFromWasm0(arg1, arg2);\n  };\n  imports.wbg.__wbg_textcontent_46a9e23ba5cbd900 = function (arg0, arg1) {\n    const ret = getObject(arg1).textContent;\n    const ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n  };\n  imports.wbg.__wbg_stack_2ac21c4ea9c454f4 = function (arg0) {\n    const ret = getObject(arg0).stack;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_stack_475ccfd121fab8c9 = function (arg0, arg1) {\n    const ret = getObject(arg1).stack;\n    const ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n  };\n  imports.wbg.__wbindgen_closure_wrapper551 = function (arg0, arg1, arg2) {\n    const ret = makeMutClosure(arg0, arg1, 117, __wbg_adapter_24);\n    return addHeapObject(ret);\n  };\n\n  return imports;\n}\n\nfunction initMemory(imports, maybe_memory) {}\n\nfunction finalizeInit(instance, module) {\n  wasm = instance.exports;\n  init.__wbindgen_wasm_module = module;\n  cachedInt32Memory0 = new Int32Array();\n  cachedUint32Memory0 = new Uint32Array();\n  cachedUint8Memory0 = new Uint8Array();\n\n  return wasm;\n}\n\nfunction initSync(module) {\n  const imports = getImports();\n\n  initMemory(imports);\n\n  if (!(module instanceof WebAssembly.Module)) {\n    module = new WebAssembly.Module(module);\n  }\n\n  const instance = new WebAssembly.Instance(module, imports);\n\n  return finalizeInit(instance, module);\n}\n\nasync function init(input) {\n  if (typeof input === \"undefined\") {\n    // input = new URL('dkls_bg.wasm', import.meta.url);\n    throw new Error(\"no\");\n  }\n  const imports = getImports();\n\n  if (\n    typeof input === \"string\" ||\n    (typeof Request === \"function\" && input instanceof Request) ||\n    (typeof URL === \"function\" && input instanceof URL)\n  ) {\n    input = fetch(input);\n  }\n\n  initMemory(imports);\n\n  const { instance, module } = await load(await input, imports);\n\n  return finalizeInit(instance, module);\n}\n\nexport { finalizeInit, getImports, initSync };\nexport default init;\n"],"names":["wasm","heap","Array","fill","undefined","getObject","idx","push","heap_next","length","takeObject","ret","dropObject","cachedTextDecoder","TextDecoder","ignoreBOM","fatal","decode","cachedUint8Memory0","Uint8Array","getUint8Memory0","byteLength","memory","buffer","getStringFromWasm0","ptr","len","subarray","addHeapObject","obj","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","written","passStringToWasm0","malloc","realloc","mem","offset","code","charCodeAt","slice","cachedInt32Memory0","Int32Array","getInt32Memory0","__wbg_adapter_24","arg0","arg1","arg2","_dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h393860affdd597ff","handleError","f","args","apply","this","e","__wbindgen_exn_store","batch_size","random_generator","state","retptr","__wbindgen_add_to_stack_pointer","ptr0","__wbindgen_malloc","__wbindgen_realloc","len0","r0","r1","random_generator_free","rng","threshold_signer","session","player_index","player_count","threshold","share","pubkey","ptr1","len1","ptr2","len2","threshold_signer_free","signer","setup","precompute","parties","local_sign","msg","hash_only","get_r_from_precompute","cachedUint32Memory0","Uint32Array","passArrayJsValueToWasm0","array","i","local_verify","r","sig_frags","sign","counterparties","stack_pointer","addBorrowedObject","Error","__wbgtest_console_log","__wbgtest_console_debug","__wbgtest_console_info","__wbgtest_console_warn","__wbgtest_console_error","WasmBindgenTestContext","__wrap","Object","create","prototype","__destroy_into_raw","free","__wbg_wasmbindgentestcontext_free","constructor","wasmbindgentestcontext_new","wasmbindgentestcontext_args","run","tests","wasmbindgentestcontext_run","getImports","imports","wbg","__wbindgen_object_drop_ref","__wbindgen_cb_drop","original","cnt","a","__wbindgen_string_new","__wbg_jssendmsg_9558e1e6ccbf0bf6","arg3","arg4","arg5","arg6","arg7","js_send_msg","__wbindgen_free","arguments","__wbindgen_string_get","x","__wbg_jsreadmsg_3e2fec56a08697d4","js_read_msg","__wbindgen_bigint_from_u64","BigInt","asUintN","__wbindgen_number_new","__wbg_newnoargs_b5b063fc6c2f0376","Function","__wbg_call_97ae9d8645dc388b","call","__wbindgen_object_clone_ref","__wbg_self_6d479506f72c6a71","self","__wbg_window_f2557cc78490aceb","window","__wbg_globalThis_7f206bda628d5286","globalThis","__wbg_global_ba75c50d1cf384f4","global","__wbindgen_is_undefined","__wbg_forEach_ce1177df15902e0c","state0","b","cb0","wasm_bindgen__convert__closures__invoke3_mut__h1fa7dc56d2cd12f8","__wbg_adapter_40","forEach","__wbg_message_fe2af63ccc8985bc","message","__wbg_name_48eda3ae6aa697ca","name","__wbg_call_168da88779e35f61","__wbg_new_9962f939219f1820","wasm_bindgen__convert__closures__invoke2_mut__h09aaa711cefcd1d9","__wbg_adapter_53","Promise","__wbg_resolve_99fe17964f31ffc0","resolve","__wbg_then_11f7a54d67b4bfad","then","__wbg_then_cedad20fbbd9418a","__wbg_buffer_3f3d764d4747d564","__wbg_new_8c3f0052272a457a","__wbg_set_83db9690f9353e79","__wbg_length_9e1ae1900cb0fbd5","__wbindgen_throw","__wbindgen_memory","__wbg_new_abda76e883ba8a5f","__wbg_stack_658279fe44541cf6","stack","__wbg_error_f851667af71bcfc6","console","error","__wbg_log_d59c74802fa44fe2","log","__wbg_static_accessor_document_0187e21f53c04a48","document","__wbg_String_0713d2a3d2b5f6b1","String","__wbg_self_74338d9cb12c5d75","__wbindgen_jsval_eq","__wbg_getElementById_4c39186cc7ced742","getElementById","__wbg_settextcontent_344de5dc2a8e15ca","textContent","__wbg_textcontent_46a9e23ba5cbd900","__wbg_stack_2ac21c4ea9c454f4","__wbg_stack_475ccfd121fab8c9","__wbindgen_closure_wrapper551","dtor","real","_len","_key","__wbindgen_export_2","get","makeMutClosure","finalizeInit","instance","module","exports","init","__wbindgen_wasm_module","initSync","WebAssembly","Module","Instance","async","input","Request","URL","fetch","Response","instantiateStreaming","headers","warn","bytes","arrayBuffer","instantiate","load"],"sourceRoot":""}